/*
      MAIN MIXIN
      Handcrafted By WhiteCube.
      ---------------------------

      Shapes, positions and sets a rotation to pseudo-element
      in order to make a leaning border (with a background-image
      if you want to).
      The anchor point will be positionned exactly where you
      want it, even if the pseudo-element's anchor point is
      outside the parent-element.
      Use this mixin along with your other styling rules inside
      your pseudo-element in order to make something beautiful.

      -----

      @include kaduk( $position, $degrees, $width )

      $position: string ('bottom-right'|'bottom-left'|'top-right'|'top-left');
      $degrees: int (with 'deg' unit)
      $width: int (with css width unit. Width of pseudo-element)

      -----

      # EXAMPLE - TEST IT
      ---------------------------
      In order to truly understand what this does,
      test this code.

      ## HTML
      -------

      <div class="kaduk-test"><p>Some content</p></div>

      ## SCSS
      -------

      .kaduk-test
            position: relative;
            width: 400px;
            height: 200px;
            background: #000;
            &:before
                  kaduk('bottom-right', -3.5deg, 200%);
                  background: rgba(#c8c8c8, 0.8);

      # FUNCTIONS
      ---------------------------
*/
// TRIGO //
pi = 3.14159265359

getKadukRadians($i)
  rmUnit($i) * (pi / 180)

getKadukValue($iAngle, $iAdjacentLength)
  tan(getKadukRadians($iAngle)) * rmUnit($iAdjacentLength)

getKadukNegative($val)
  ($val * -1)

getKadukUnit($val)
  $val - ($val - 1)

/*
      # MIXINS
      ---------------------------
*/

getKadukPosition($position, $offset)
  if $position == "bottom-right"
    bottom: 0
    right: (-1*$offset)
    apply-origin(100% 100%, false)
  else if $position == "bottom-left"
    bottom: 0
    left: (-1*$offset)
    apply-origin(0 100%, false)
  else if $position == "top-right"
    top: 0
    right: (-1*$offset)
    transform-origin: (100% 0)
  else if $position == "top-left"
    top: 0
    left: (-1*$offset)
    transform-origin: (0 0)


getKadukOffset($position, $degrees, $iLength, $unit)
  if $position == "bottom-right"
    margin-bottom: (getKadukNegative(getKadukValue($degrees, $iLength)) * $unit)
  else if $position == "bottom-left"
    margin-bottom: (getKadukValue($degrees, $iLength) * $unit)
  else if $position == "top-right"
    margin-top: (getKadukValue($degrees, $iLength) * $unit)
  else if $position == "top-left"
    margin-top: (getKadukNegative(getKadukValue($degrees, $iLength)) * $unit)


kaduk($position, $degrees, $width)
  content: ""
  display: block
  position: absolute
  height: 0
  width: $width
  padding-bottom: $width
  getKadukPosition($position, $width / 4)
  transform: rotateZ($degrees)
  getKadukOffset($position, $degrees, ($width / 4), getKadukUnit($width))
